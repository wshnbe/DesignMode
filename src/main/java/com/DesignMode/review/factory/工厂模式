工厂模式
定义:定义一个能够创建对象的接口，让其子类决定实例化哪一个对象的实例。工厂方法的将对象的创建延迟到工厂接口的子类实现。
特点：根据传入的参数的不同，创建出不同的对象的实例。

优点：
1.良好的封装性， 代码结构清晰。 一个对象创建是有条件约束的， 如一个调用者需
要一个具体的产品对象， 只要知道这个产品的类名（ 或约束字符串） 就可以了， 不用知道创
建对象的艰辛过程， 降低模块间的耦合。

2.工厂方法模式的扩展性非常优秀。 在增加产品类的情况下， 只要适当地修改具体
的工厂类或扩展一个工厂类。

3.屏蔽产品类，产品类的实现如何变化， 调用者都不需要关
心，它只需要关心产品的接口，只要接口保持不变，系统中的上层模块就不要发生变化。 

4.解耦合性。上层系统不需要知道产品的具体的细节，只需要知道产品类的抽象就行。

缺点：

抽象工厂模式
定义：定义一个能够创建相互依赖的对象的接口，让工厂子类决定创建怎样的依赖关系的对象。
优点：
1.对象创建的封装性
上层系统不需要知道具体的实体类的创建的过程，只需要知道它要使用的接口就行；而具体的创建实体类的过程全部封装在工厂类中完成，具体的创建细节不
对外透漏，上层使用也不需要知道。

2.产品的细节的隐蔽。
创建的对象过程是怎样的依赖关系，都不用对外透漏，是封闭不可见的。

3.解耦
上层不用自己实现组装对象的复杂的过程，只需要知道接口就行。

缺点：
扩展产品族，非常困难。



